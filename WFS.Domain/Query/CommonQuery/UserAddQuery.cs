//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WFS.Domain.Query
{
    using System;
    using WFS.Domain;
    using System.Linq;
    using System.Text;
    using WFS.Domain.Query;
    using System.Data;
    using System.Xml;
    using WFS.Db;
    using Entities.Models;
    using WFS.Entities.Enumerations;
    using AutoMapper;
    using System.Threading.Tasks;
    using System.Collections.Generic;
    using Entities.Helper.TextFunction;

    public class UserAddQuery : IQuery<WFS.Entities.Models.User>
    {
        public WFS.Entities.Models.User User { get; set; }
    }

    public class UserAddQueryHandler : IQueryHandler<UserAddQuery, WFS.Entities.Models.User>
    {
        private readonly DbEntities _db;
        public UserAddQueryHandler()
        {
            _db = new DbEntities();
        }


        public WFS.Entities.Models.User Handler(UserAddQuery query)
        {
            try
            {
                string password = StringHelper.GeneratePassword(8);
                var obj = new WFS.Db.User();
                obj.Id = query.User.Id;
                obj.Password = password;
                obj.Name = query.User.Name;
                obj.Email = query.User.Email;
                obj.UserType = query.User.UserType;
                obj.CreatedDate = query.User.CreatedDate;
                obj.CreatedIpAddress = query.User.CreatedIpAddress;
                obj.CreatedUserId = query.User.CreatedUserId;
                obj.UpdatedDate = query.User.UpdatedDate;
                obj.UpdatedIpAddress = query.User.UpdatedIpAddress;
                obj.UpdatedUserId = query.User.UpdatedUserId;
                obj.IsDeleted = query.User.IsDeleted;
                _db.User.Add(obj);
                _db.SaveChanges();
                query.User.Id = obj.Id;
                return query.User;

            }
            catch (Exception ex)
            {
                throw new ExceptionLog(LogType.DATABASE_INSERT, LogLevel.ERROR, ex, "AddQueryHandler");
            }
        }
    }


}
